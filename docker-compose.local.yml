services:
  traefik:
    image: traefik:v2.0
    container_name: "explorer-test-local-traefik"
    command:
      - --providers.docker=true
      # Enable the API handler in insecure mode,
      # which means that the Traefik API will be available directly
      # on the entry point named traefik.
      - --api.insecure=true
      # Define Traefik entry points to port [80] for http and port [443] for https.
      - --entrypoints.invariant-explorer-web.address=0.0.0.0:80
      - --log.level=INFO
    networks:
      - invariant-explorer-web
    ports:
      - "${PORT_HTTP:-80}:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-http.entrypoints=invariant-explorer-web"

  app-api:
    build:
      context: ./app-api
      dockerfile: ../app-api/Dockerfile.api
    depends_on:
      database:
        condition: service_healthy
    working_dir: /srv/app
    env_file:
      - .env
    environment:
      - PROJECTS_DIR=/srv/projects
      - KEYCLOAK_CLIENT_ID_SECRET=local-does-not-use-keycloak
      - TZ=Europe/Berlin
      - DEV_MODE=true
      - APP_NAME=explorer-test
      - CONFIG_FILE=/config/explorer.config.yml
    networks:
      - internal
      - invariant-explorer-web
    ports:
      - "8001:8000"
    volumes:
      - type: bind
        source: ./app-api
        target: /srv/app
      - ./configs/explorer.test.yml:/config/explorer.config.yml
      - ./data/images:/srv/images
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.explorer-test-api.rule=(Host(`localhost`) && PathPrefix(`/api/`)) || (Host(`127.0.0.1`) && PathPrefix(`/api/`)) || (Host(`host.docker.internal`) && PathPrefix(`/api/`))"
      - "traefik.http.routers.explorer-test-api.entrypoints=invariant-explorer-web"
      - "traefik.http.services.explorer-test-api.loadbalancer.server.port=8000"
      - "traefik.docker.network=invariant-explorer-web"

  app-ui:
    image: node:alpine
    entrypoint: "sh -c 'yarn && yarn run dev --host 0.0.0.0 --port 5173'"
    working_dir: /srv/app
    networks:
      - invariant-explorer-web
    volumes:
      - type: bind
        source: ./app-ui
        target: /srv/app
      - ./configs/explorer.local.yml:/config/explorer.config.yml
    environment:
      - APP_NAME=explorer-test
      - VITE_CONFIG_FILE=/config/explorer.config.yml
      - PREVIEW=${PREVIEW:-false}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.explorer-test-ui.rule=Host(`localhost`)||Host(`127.0.0.1`)"
      - "traefik.http.routers.explorer-test-ui.entrypoints=invariant-explorer-web"
      - "traefik.http.services.explorer-test-ui.loadbalancer.server.port=5173"
      - "traefik.docker.network=invariant-explorer-web"

  # launches an instance of Invariant Gateway as part of the Explorer stack (this allows to upload
  # traces by using Gateway's transparent LLM proxy)
  gateway:
    image: ghcr.io/invariantlabs-ai/invariant-gateway/gateway:latest
    platform: linux/amd64
    container_name: "explorer-local-gateway"
    networks:
      - invariant-explorer-web
      - internal
    environment:
      - INVARIANT_API_URL=http://app-api:8000
      - PORT=8002
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.explorer-local-gateway.rule=(Host(`localhost`) && PathPrefix(`/api/v1/gateway/`)) || (Host(`127.0.0.1`) && PathPrefix(`/api/v1/gateway/`)) || (Host(`host.docker.internal`) && PathPrefix(`/api/v1/gateway/`))"
      - "traefik.http.routers.explorer-local-gateway.entrypoints=invariant-explorer-web"
      - "traefik.http.services.explorer-local-gateway.loadbalancer.server.port=8002"
      - "traefik.docker.network=invariant-explorer-web"

  database:
    image: postgres:16
    env_file:
      - .env
    networks:
      - internal
    volumes:
      - type: bind
        source: ./data/database
        target: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  invariant-explorer-web:
    external: true
  internal:
