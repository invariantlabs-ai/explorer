name: ${APP_NAME}-test
services:
  traefik:
    extends:
      file: docker-compose.yml
      service: traefik
    depends_on:
      - database
      - app-ui
      - app-api
    networks:
      - web
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # Mount the configuration file with the certificates list.
      - ./certs/traefik-ssl.toml:/root/.config/ssl.toml
      # Mount the folder containing the certificates for https.
      - ./certs/:/certs/
  database:
    extends:
      file: docker-compose.yml
      service: database
    container_name: "${APP_NAME}-database"
    volumes:
      - type: bind
        source: /tmp/invariant-explorer-test/data/database
        target: /var/lib/postgresql/data
    networks:
      - internal
  app-ui:
    extends:
      file: docker-compose.yml
      service: app-ui
    container_name: "${APP_NAME}-app-ui"
    networks:
      - web
  app-api:
    extends:
      file: docker-compose.yml
      service: app-api
    container_name: "${APP_NAME}-app-api"
    volumes:
      - type: bind
        source: /tmp/invariant-explorer-test/data/datasets
        target: /srv/datasets
    networks:
      - web
      - internal
  rabbitmq:
    extends:
      file: docker-compose.yml
      service: rabbitmq
    container_name: "${APP_NAME}-rabbitmq"
    networks:
      - internal
  celery:
    extends:
      file: docker-compose.yml
      service: celery
    container_name: "${APP_NAME}-celery"
    networks:
      - internal

networks:
  web:
  internal:
    internal: true